[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ultimate-analysis"
description = "Ultimate Frisbee video analysis application"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Ultimate Analysis Team", email = "contact@ultimate-analysis.com"},
]
keywords = ["ultimate", "frisbee", "video", "analysis", "computer-vision", "sports"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Sports/Fitness",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Multimedia :: Video :: Display",
]
dynamic = ["version"]

dependencies = [
    "numpy>=1.21.0",
    "opencv-python>=4.5.0",
    "PyQt5>=5.15.0",
    "ultralytics>=8.0.0",
    "easyocr>=1.6.0", 
    "pydantic>=1.8.0",
    "pyyaml>=6.0",
    "psutil>=5.8.0",
]

[project.optional-dependencies]
gpu = [
    "torch>=1.9.0",
    "torchvision>=0.10.0",
]
dev = [
    "pytest>=6.0.0",
    "black>=21.0.0",
    "flake8>=3.9.0",
    "mypy>=0.910",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=0.5.0",
]

[project.scripts]
ultimate-analysis = "ultimate_analysis.main:main"

[project.urls]
Homepage = "https://github.com/your-org/ultimate-analysis"
Repository = "https://github.com/your-org/ultimate-analysis.git"
Documentation = "https://ultimate-analysis.readthedocs.io/"
Issues = "https://github.com/your-org/ultimate-analysis/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
write_to = "src/ultimate_analysis/_version.py"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ultimate_analysis"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
